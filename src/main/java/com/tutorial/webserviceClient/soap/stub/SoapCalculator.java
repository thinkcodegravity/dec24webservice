
package com.tutorial.webserviceClient.soap.stub;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapCalculator", targetNamespace = "http://soap.webservice.tutorial.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapCalculator {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.AddResponse")
    @Action(input = "http://soap.webservice.tutorial.com/SoapCalculator/addRequest", output = "http://soap.webservice.tutorial.com/SoapCalculator/addResponse")
    public int add(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.tutorial.webserviceClient.soap.stub.Address
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRestaurantAddress", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.GetRestaurantAddress")
    @ResponseWrapper(localName = "getRestaurantAddressResponse", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.GetRestaurantAddressResponse")
    @Action(input = "http://soap.webservice.tutorial.com/SoapCalculator/getRestaurantAddressRequest", output = "http://soap.webservice.tutorial.com/SoapCalculator/getRestaurantAddressResponse")
    public Address getRestaurantAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sub", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.Sub")
    @ResponseWrapper(localName = "subResponse", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.SubResponse")
    @Action(input = "http://soap.webservice.tutorial.com/SoapCalculator/subRequest", output = "http://soap.webservice.tutorial.com/SoapCalculator/subResponse")
    public int sub(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "greeting", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.Greeting")
    @ResponseWrapper(localName = "greetingResponse", targetNamespace = "http://soap.webservice.tutorial.com/", className = "com.tutorial.webserviceClient.soap.stub.GreetingResponse")
    @Action(input = "http://soap.webservice.tutorial.com/SoapCalculator/greetingRequest", output = "http://soap.webservice.tutorial.com/SoapCalculator/greetingResponse")
    public String greeting(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
